# Copyright 2025 The SiliFuzz Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_cc//cc:cc_test.bzl", "cc_test")

licenses(["notice"])

cc_library(
    name = "test_generation_lib",
    srcs = [
        "candidate.cc",
        "debugging.cc",
        "instruction_pool.cc",
        "prefilter.cc",
        "register_info.cc",
        "synthesize_base.cc",
        "synthesize_instruction.cc",
        "synthesize_shuffle.cc",
        "synthesize_test.cc",
        "xed_operand_util.cc",
    ],
    hdrs = [
        "candidate.h",
        "debugging.h",
        "instruction_pool.h",
        "mxcsr.h",
        "prefilter.h",
        "rand_util.h",
        "register_info.h",
        "synthesize_base.h",
        "synthesize_instruction.h",
        "synthesize_shuffle.h",
        "synthesize_test.h",
        "version.h",
        "weighted_choose_one.h",
        "xed_operand_util.h",
    ],
    deps = [
        "@silifuzz//instruction:xed_util",
        "@silifuzz//util:checks",
        "@abseil-cpp//absl/base:core_headers",
        "@abseil-cpp//absl/strings:string_view",
        "@abseil-cpp//absl/types:span",
        "@libxed//:xed",
    ],
)

cc_library(
    name = "snapshot_generation",
    srcs = [
        "synthesize_snapshot.cc",
    ],
    hdrs = [
        "synthesize_snapshot.h",
    ],
    deps = [
        ":test_generation_lib",
        "@silifuzz//common:raw_insns_util",
        "@silifuzz//common:snapshot",
        "@silifuzz//runner:make_snapshot",
        "@silifuzz//runner:runner_provider",
        "@silifuzz//util:arch",
        "@silifuzz//util:checks",
        "@silifuzz//util/ucontext:ucontext_types",
        "@abseil-cpp//absl/status:statusor",
        "@abseil-cpp//absl/strings",
        "@abseil-cpp//absl/strings:string_view",
        "@libxed//:xed",
    ],
)

cc_test(
    name = "hashtest_generator_test",
    srcs = [
        "hashtest_generator_test.cc",
    ],
    deps = [
        ":test_generation_lib",
        "@silifuzz//instruction:xed_util",
        "@abseil-cpp//absl/strings",
        "@googletest//:gtest_main",
        "@libxed//:xed",
    ],
)
